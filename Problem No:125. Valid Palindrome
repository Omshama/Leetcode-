public class Solution {
    /**
     * This method checks if a given string is a palindrome.
     * A palindrome is a string that reads the same backward as forward.
     *
     * @param s the input string to be checked
     * @return true if the input string is a palindrome, false otherwise
     */
    public boolean isPalindrome(String s) {
        // Convert the string to lowercase and remove all non-alphanumeric characters
        s = s.toLowerCase().replaceAll("[^A-Za-z0-9]", "");
        
        // Initialize two pointers, one at the beginning and one at the end of the string
        int i = 0;
        int j = s.length() - 1;
        
        // Iterate through the string until the two pointers meet
        while (i <= j) {
            // Check if the characters at the current pointers are not equal
            if (s.charAt(i) != s.charAt(j)) {
                // If they are not equal, the string is not a palindrome
                return false;
            } else {
                // If they are equal, move the pointers towards the center
                i++;
                j--;
            }
        }
        // If the entire string has been checked and all characters match, it is a palindrome
        return true;
    }
}
