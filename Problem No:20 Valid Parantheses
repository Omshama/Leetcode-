import java.util.Stack;

class Solution {
    public boolean isValid(String s) {
        // Create a stack to store opening brackets
        Stack<Character> stack = new Stack<>();

        // Iterate through each character in the input string
        for (char c : s.toCharArray()) {
            // If the character is an opening bracket, push its corresponding closing bracket onto the stack
            if (c == '(')
                stack.push(')');
            else if (c == '{')
                stack.push('}');
            else if (c == '[')
                stack.push(']');

            // If the character is a closing bracket
            else if (stack.empty() || stack.pop() != c)
                // Check if the stack is empty or if the top of the stack doesn't match the current closing bracket
                return false;
        }

        // The stack should be empty if all opening brackets have matching closing brackets
        return stack.isEmpty();
    }
}
